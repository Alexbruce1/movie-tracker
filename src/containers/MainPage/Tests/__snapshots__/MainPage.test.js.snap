// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`MainPage Should render like snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <MainPage
    clearFavorites={[MockFunction]}
    movies={
      Array [
        Object {
          "backdrop": "mock.jpg",
          "favorite": false,
          "id": 335983,
          "overview": "Mock description",
          "poster": "mock.jpg",
          "rating": 6.6,
          "releaseDate": "10/03/2018",
          "title": "Venom",
        },
        Object {
          "backdrop": "mock.jpg",
          "favorite": false,
          "id": 300001,
          "overview": "Mock description.",
          "poster": "mock.jpg",
          "rating": 6.6,
          "releaseDate": "10/03/2018",
          "title": "Halloween",
        },
      ]
    }
    signOut={[MockFunction]}
    user={
      Object {
        "id": 31,
        "loggedIn": true,
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <div
          className="main-header"
        >
          <button
            className="all-favorites"
          >
            <NavLink
              activeClassName="active"
              aria-current="page"
              className="nav-link"
              to="/favorites"
            >
              Favorites
            </NavLink>
          </button>
          <div
            className="header-title"
          >
            <img
              alt=""
              className="main-logo"
              src="film-red.svg"
            />
            <h3
              className="header-text"
            >
              MovieTracker
            </h3>
          </div>
          <button
            className="sign-out"
            onClick={[Function]}
          >
            <NavLink
              activeClassName="active"
              aria-current="page"
              className="nav-link"
              to="/"
            >
              Sign Out
            </NavLink>
          </button>
        </div>,
        <div
          className="header-container-splitter"
        />,
        <CardContainer
          movies={
            Array [
              Object {
                "backdrop": "mock.jpg",
                "favorite": false,
                "id": 335983,
                "overview": "Mock description",
                "poster": "mock.jpg",
                "rating": 6.6,
                "releaseDate": "10/03/2018",
                "title": "Venom",
              },
              Object {
                "backdrop": "mock.jpg",
                "favorite": false,
                "id": 300001,
                "overview": "Mock description.",
                "poster": "mock.jpg",
                "rating": 6.6,
                "releaseDate": "10/03/2018",
                "title": "Halloween",
              },
            ]
          }
        />,
      ],
      "className": "MainPage",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <button
              className="all-favorites"
            >
              <NavLink
                activeClassName="active"
                aria-current="page"
                className="nav-link"
                to="/favorites"
              >
                Favorites
              </NavLink>
            </button>,
            <div
              className="header-title"
            >
              <img
                alt=""
                className="main-logo"
                src="film-red.svg"
              />
              <h3
                className="header-text"
              >
                MovieTracker
              </h3>
            </div>,
            <button
              className="sign-out"
              onClick={[Function]}
            >
              <NavLink
                activeClassName="active"
                aria-current="page"
                className="nav-link"
                to="/"
              >
                Sign Out
              </NavLink>
            </button>,
          ],
          "className": "main-header",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <NavLink
                activeClassName="active"
                aria-current="page"
                className="nav-link"
                to="/favorites"
              >
                Favorites
              </NavLink>,
              "className": "all-favorites",
              "onClick": undefined,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "activeClassName": "active",
                "aria-current": "page",
                "children": "Favorites",
                "className": "nav-link",
                "to": "/favorites",
              },
              "ref": null,
              "rendered": "Favorites",
              "type": [Function],
            },
            "type": "button",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <img
                  alt=""
                  className="main-logo"
                  src="film-red.svg"
                />,
                <h3
                  className="header-text"
                >
                  MovieTracker
                </h3>,
              ],
              "className": "header-title",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "alt": "",
                  "className": "main-logo",
                  "src": "film-red.svg",
                },
                "ref": null,
                "rendered": null,
                "type": "img",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "MovieTracker",
                  "className": "header-text",
                },
                "ref": null,
                "rendered": "MovieTracker",
                "type": "h3",
              },
            ],
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <NavLink
                activeClassName="active"
                aria-current="page"
                className="nav-link"
                to="/"
              >
                Sign Out
              </NavLink>,
              "className": "sign-out",
              "onClick": [Function],
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "activeClassName": "active",
                "aria-current": "page",
                "children": "Sign Out",
                "className": "nav-link",
                "to": "/",
              },
              "ref": null,
              "rendered": "Sign Out",
              "type": [Function],
            },
            "type": "button",
          },
        ],
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "className": "header-container-splitter",
        },
        "ref": null,
        "rendered": null,
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "movies": Array [
            Object {
              "backdrop": "mock.jpg",
              "favorite": false,
              "id": 335983,
              "overview": "Mock description",
              "poster": "mock.jpg",
              "rating": 6.6,
              "releaseDate": "10/03/2018",
              "title": "Venom",
            },
            Object {
              "backdrop": "mock.jpg",
              "favorite": false,
              "id": 300001,
              "overview": "Mock description.",
              "poster": "mock.jpg",
              "rating": 6.6,
              "releaseDate": "10/03/2018",
              "title": "Halloween",
            },
          ],
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            className="main-header"
          >
            <button
              className="all-favorites"
            >
              <NavLink
                activeClassName="active"
                aria-current="page"
                className="nav-link"
                to="/favorites"
              >
                Favorites
              </NavLink>
            </button>
            <div
              className="header-title"
            >
              <img
                alt=""
                className="main-logo"
                src="film-red.svg"
              />
              <h3
                className="header-text"
              >
                MovieTracker
              </h3>
            </div>
            <button
              className="sign-out"
              onClick={[Function]}
            >
              <NavLink
                activeClassName="active"
                aria-current="page"
                className="nav-link"
                to="/"
              >
                Sign Out
              </NavLink>
            </button>
          </div>,
          <div
            className="header-container-splitter"
          />,
          <CardContainer
            movies={
              Array [
                Object {
                  "backdrop": "mock.jpg",
                  "favorite": false,
                  "id": 335983,
                  "overview": "Mock description",
                  "poster": "mock.jpg",
                  "rating": 6.6,
                  "releaseDate": "10/03/2018",
                  "title": "Venom",
                },
                Object {
                  "backdrop": "mock.jpg",
                  "favorite": false,
                  "id": 300001,
                  "overview": "Mock description.",
                  "poster": "mock.jpg",
                  "rating": 6.6,
                  "releaseDate": "10/03/2018",
                  "title": "Halloween",
                },
              ]
            }
          />,
        ],
        "className": "MainPage",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <button
                className="all-favorites"
              >
                <NavLink
                  activeClassName="active"
                  aria-current="page"
                  className="nav-link"
                  to="/favorites"
                >
                  Favorites
                </NavLink>
              </button>,
              <div
                className="header-title"
              >
                <img
                  alt=""
                  className="main-logo"
                  src="film-red.svg"
                />
                <h3
                  className="header-text"
                >
                  MovieTracker
                </h3>
              </div>,
              <button
                className="sign-out"
                onClick={[Function]}
              >
                <NavLink
                  activeClassName="active"
                  aria-current="page"
                  className="nav-link"
                  to="/"
                >
                  Sign Out
                </NavLink>
              </button>,
            ],
            "className": "main-header",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <NavLink
                  activeClassName="active"
                  aria-current="page"
                  className="nav-link"
                  to="/favorites"
                >
                  Favorites
                </NavLink>,
                "className": "all-favorites",
                "onClick": undefined,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "activeClassName": "active",
                  "aria-current": "page",
                  "children": "Favorites",
                  "className": "nav-link",
                  "to": "/favorites",
                },
                "ref": null,
                "rendered": "Favorites",
                "type": [Function],
              },
              "type": "button",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <img
                    alt=""
                    className="main-logo"
                    src="film-red.svg"
                  />,
                  <h3
                    className="header-text"
                  >
                    MovieTracker
                  </h3>,
                ],
                "className": "header-title",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "alt": "",
                    "className": "main-logo",
                    "src": "film-red.svg",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": "img",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "MovieTracker",
                    "className": "header-text",
                  },
                  "ref": null,
                  "rendered": "MovieTracker",
                  "type": "h3",
                },
              ],
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <NavLink
                  activeClassName="active"
                  aria-current="page"
                  className="nav-link"
                  to="/"
                >
                  Sign Out
                </NavLink>,
                "className": "sign-out",
                "onClick": [Function],
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "activeClassName": "active",
                  "aria-current": "page",
                  "children": "Sign Out",
                  "className": "nav-link",
                  "to": "/",
                },
                "ref": null,
                "rendered": "Sign Out",
                "type": [Function],
              },
              "type": "button",
            },
          ],
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "className": "header-container-splitter",
          },
          "ref": null,
          "rendered": null,
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "movies": Array [
              Object {
                "backdrop": "mock.jpg",
                "favorite": false,
                "id": 335983,
                "overview": "Mock description",
                "poster": "mock.jpg",
                "rating": 6.6,
                "releaseDate": "10/03/2018",
                "title": "Venom",
              },
              Object {
                "backdrop": "mock.jpg",
                "favorite": false,
                "id": 300001,
                "overview": "Mock description.",
                "poster": "mock.jpg",
                "rating": 6.6,
                "releaseDate": "10/03/2018",
                "title": "Halloween",
              },
            ],
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
