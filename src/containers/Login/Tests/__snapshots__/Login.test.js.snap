// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Login Should render like snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Login
    loginUser={[MockFunction]}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <form
        className="Login-form"
      >
        <h1
          className="Login-header"
        >
           Movie Tracker 
        </h1>
        <h3>
           Login 
        </h3>
        <input
          name="email"
          onChange={[Function]}
          placeholder="Email address"
          type="text"
          value=""
        />
        <input
          name="password"
          onChange={[Function]}
          placeholder="Password"
          type="password"
          value=""
        />
        <button
          className="login-button"
          onClick={[Function]}
          type="submit"
        >
          Login
        </button>
        <button
          className="create-user"
          onClick={[Function]}
        >
          Create User
        </button>
        <NavLink
          activeClassName="active"
          aria-current="page"
          className="home-link"
          to="/"
        >
          Home
        </NavLink>
      </form>,
      "className": "Login",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <h1
            className="Login-header"
          >
             Movie Tracker 
          </h1>,
          <h3>
             Login 
          </h3>,
          null,
          <input
            name="email"
            onChange={[Function]}
            placeholder="Email address"
            type="text"
            value=""
          />,
          <input
            name="password"
            onChange={[Function]}
            placeholder="Password"
            type="password"
            value=""
          />,
          <button
            className="login-button"
            onClick={[Function]}
            type="submit"
          >
            Login
          </button>,
          <button
            className="create-user"
            onClick={[Function]}
          >
            Create User
          </button>,
          null,
          <NavLink
            activeClassName="active"
            aria-current="page"
            className="home-link"
            to="/"
          >
            Home
          </NavLink>,
        ],
        "className": "Login-form",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": " Movie Tracker ",
            "className": "Login-header",
          },
          "ref": null,
          "rendered": " Movie Tracker ",
          "type": "h1",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": " Login ",
          },
          "ref": null,
          "rendered": " Login ",
          "type": "h3",
        },
        null,
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "name": "email",
            "onChange": [Function],
            "placeholder": "Email address",
            "type": "text",
            "value": "",
          },
          "ref": null,
          "rendered": null,
          "type": "input",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "name": "password",
            "onChange": [Function],
            "placeholder": "Password",
            "type": "password",
            "value": "",
          },
          "ref": null,
          "rendered": null,
          "type": "input",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Login",
            "className": "login-button",
            "onClick": [Function],
            "type": "submit",
          },
          "ref": null,
          "rendered": "Login",
          "type": "button",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Create User",
            "className": "create-user",
            "onClick": [Function],
          },
          "ref": null,
          "rendered": "Create User",
          "type": "button",
        },
        null,
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "activeClassName": "active",
            "aria-current": "page",
            "children": "Home",
            "className": "home-link",
            "to": "/",
          },
          "ref": null,
          "rendered": "Home",
          "type": [Function],
        },
      ],
      "type": "form",
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <form
          className="Login-form"
        >
          <h1
            className="Login-header"
          >
             Movie Tracker 
          </h1>
          <h3>
             Login 
          </h3>
          <input
            name="email"
            onChange={[Function]}
            placeholder="Email address"
            type="text"
            value=""
          />
          <input
            name="password"
            onChange={[Function]}
            placeholder="Password"
            type="password"
            value=""
          />
          <button
            className="login-button"
            onClick={[Function]}
            type="submit"
          >
            Login
          </button>
          <button
            className="create-user"
            onClick={[Function]}
          >
            Create User
          </button>
          <NavLink
            activeClassName="active"
            aria-current="page"
            className="home-link"
            to="/"
          >
            Home
          </NavLink>
        </form>,
        "className": "Login",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <h1
              className="Login-header"
            >
               Movie Tracker 
            </h1>,
            <h3>
               Login 
            </h3>,
            null,
            <input
              name="email"
              onChange={[Function]}
              placeholder="Email address"
              type="text"
              value=""
            />,
            <input
              name="password"
              onChange={[Function]}
              placeholder="Password"
              type="password"
              value=""
            />,
            <button
              className="login-button"
              onClick={[Function]}
              type="submit"
            >
              Login
            </button>,
            <button
              className="create-user"
              onClick={[Function]}
            >
              Create User
            </button>,
            null,
            <NavLink
              activeClassName="active"
              aria-current="page"
              className="home-link"
              to="/"
            >
              Home
            </NavLink>,
          ],
          "className": "Login-form",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": " Movie Tracker ",
              "className": "Login-header",
            },
            "ref": null,
            "rendered": " Movie Tracker ",
            "type": "h1",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": " Login ",
            },
            "ref": null,
            "rendered": " Login ",
            "type": "h3",
          },
          null,
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "name": "email",
              "onChange": [Function],
              "placeholder": "Email address",
              "type": "text",
              "value": "",
            },
            "ref": null,
            "rendered": null,
            "type": "input",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "name": "password",
              "onChange": [Function],
              "placeholder": "Password",
              "type": "password",
              "value": "",
            },
            "ref": null,
            "rendered": null,
            "type": "input",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Login",
              "className": "login-button",
              "onClick": [Function],
              "type": "submit",
            },
            "ref": null,
            "rendered": "Login",
            "type": "button",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Create User",
              "className": "create-user",
              "onClick": [Function],
            },
            "ref": null,
            "rendered": "Create User",
            "type": "button",
          },
          null,
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "activeClassName": "active",
              "aria-current": "page",
              "children": "Home",
              "className": "home-link",
              "to": "/",
            },
            "ref": null,
            "rendered": "Home",
            "type": [Function],
          },
        ],
        "type": "form",
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
